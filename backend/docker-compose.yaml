services:
  # MySQL Container
  db:
    container_name: bb-db
    image: mysql:8.0
    restart: unless-stopped
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306" # Maps localhost 3306 to container port 3306 
    volumes:
      # This is storage from the mysql container that is mapped to dbdata in the docker local storage (volume)
      - dbdata:/var/lib/mysql
      
      # Mounting the local .sql dump file into the docker container as 'read only'
      - ./database/tbb-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro 
      - ./database/sample.sql:/docker-entrypoint-initdb.d/02-sample.sql:ro
    networks:
     - internal # The mysql container operates on the internal docker network 
  


  # Python Backend API Container 
  api:
    build: ./api # Looks for Dockerfile in this directory
    container_name: bb-api
    restart: unless-stopped
    ports:
      - "5000:5000" # Maps localhost 5000 to container port 5000 
    env_file: .env
    depends_on:
      - db 
    networks:
      - internal 


volumes:
  dbdata:


networks:
  internal:
    name: app-network
    driver: bridge